name: Release application

on:
  push:

env:
  PROJECT_ID: ${{ secrets.GKE_PROJECT }}
  GKE_CLUSTER: dwk-cluster
  GKE_ZONE: europe-north1-b
  CLIENT_IMAGE: client
  SERVER_IMAGE: server
  CRONJOB_IMAGE: wiki-url

jobs:
  build-todo-app:
    name: Build ToDo App
    runs-on: ubuntu-20.04

    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Set up Cloud SDK
        uses: google-github-actions/setup-gcloud@v0
        with:
          project_id: ${{ secrets.GKE_PROJECT }}
          service_account_key: ${{ secrets.GKE_SA_KEY }}
          export_default_credentials: true

      - name: Sops Binary Installer
        uses: mdgreenwald/mozilla-sops-action@v1.2.0

      - name: Decrypt secret yaml
        run: |-
          echo "${{ secrets.AGE_SECRET_KEY }}" > key.txt
          export SOPS_AGE_KEY_FILE=key.txt
          sops -d -i manifests/secret.enc.yaml

      - name: Configure docker to use the gcloud command-line tool as a credential helper
        run: gcloud --quiet auth configure-docker

      - name: Set kubectl to the right cluster
        run: gcloud container clusters get-credentials "$GKE_CLUSTER" --zone "$GKE_ZONE"

      - name: Build Client Image
        run: |-
          docker build --tag "gcr.io/$PROJECT_ID/$CLIENT_IMAGE:${GITHUB_REF#refs/heads/}-$GITHUB_SHA" ./client
      - name: Build Server Image
        run: |-
          docker build --tag "gcr.io/$PROJECT_ID/$SERVER_IMAGE:${GITHUB_REF#refs/heads/}-$GITHUB_SHA" ./server
      - name: Build Cronjob Image
        run: |-
          docker build --tag "gcr.io/$PROJECT_ID/$CRONJOB_IMAGE:${GITHUB_REF#refs/heads/}-$GITHUB_SHA" ./cronjob
      - name: Publish Client Image
        run: |-
          docker push "gcr.io/$PROJECT_ID/$CLIENT_IMAGE:${GITHUB_REF#refs/heads/}-$GITHUB_SHA"
      - name: Publish Server Image
        run: |-
          docker push "gcr.io/$PROJECT_ID/$SERVER_IMAGE:${GITHUB_REF#refs/heads/}-$GITHUB_SHA"
      - name: Publish Cronjob Image
        run: |-
          docker push "gcr.io/$PROJECT_ID/$CRONJOB_IMAGE:${GITHUB_REF#refs/heads/}-$GITHUB_SHA"

      - name: Set up Kustomize
        uses: imranismail/setup-kustomize@v1

      - name: Deploy
        run: |-
          kubectl create namespace ${GITHUB_REF#refs/heads/} || true
          kubectl config set-context --current --namespace=${GITHUB_REF#refs/heads/}
          kustomize edit set namespace ${GITHUB_REF#refs/heads/}
          kustomize edit set image CLIENT=gcr.io/$PROJECT_ID/$CLIENT_IMAGE:${GITHUB_REF#refs/heads/}-$GITHUB_SHA
          kustomize edit set image SERVER=gcr.io/$PROJECT_ID/$SERVER_IMAGE:${GITHUB_REF#refs/heads/}-$GITHUB_SHA
          kustomize edit set image CRONJOB=gcr.io/$PROJECT_ID/$CRONJOB_IMAGE:${GITHUB_REF#refs/heads/}-$GITHUB_SHA
          kubectl apply -k .
          kubectl rollout status deployment $CLIENT_IMAGE-dep
          kubectl rollout status deployment $SERVER_IMAGE-dep
          kubectl get services -o wide
