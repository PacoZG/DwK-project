apiVersion: apps/v1
kind: Deployment
metadata:
  name: server-dep
  namespace: project
spec:
  replicas: 4
  selector:
    matchLabels:
      app: server
  template:
    metadata:
      labels:
        app: server
    spec:
      containers:
        - name: server
          image: PROJECT_SERVER
          imagePullPolicy: Always
          env:
            - name: POSTGRES_HOST
              valueFrom:
                configMapKeyRef:
                  name: config-env-variables
                  key: postgres-host
            - name: POSTGRES_USER
              valueFrom:
                configMapKeyRef:
                  name: config-env-variables
                  key: postgres_user
            - name: POSTGRES_DB
              valueFrom:
                configMapKeyRef:
                  name: config-env-variables
                  key: postgres_db
            - name: NATS_URL
              value: nats://my-nats:4222
          envFrom:
            - secretRef:
                name: postgres-pw
          # livenessProbe:
          #   initialDelaySeconds: 20
          #   periodSeconds: 5
          #   httpGet:
          #     path: /healthz
          #     port: 3001
          resources:
            requests:
              memory: '64Mi'
              cpu: '250m'
            limits:
              memory: '516Mi'
              cpu: '500m'

---
# Service
apiVersion: v1
kind: Service
metadata:
  name: server-svc
  namespace: project
spec:
  type: ClusterIP
  selector:
    app: server
  ports:
    - port: 80
      protocol: TCP
      targetPort: 3001

---
# Ingress
# apiVersion: networking.k8s.io/v1
# kind: Ingress
# metadata:
#   name: project
#   namespace: project
#   labels:
#     name: project
# spec:
#   rules:
#     - http:
#         paths:
#           - path: /api/todos
#             pathType: Prefix
#             backend:
#               service:
#                 name: server-svc
#                 port:
#                   number: 80
#           - path: /api/image
#             pathType: Prefix
#             backend:
#               service:
#                 name: server-svc
#                 port:
#                   number: 80
#           - path: /healthz
#             pathType: Prefix
#             backend:
#               service:
#                 name: server-svc
#                 port:
#                   number: 80
